@import 'react-components/src/style/mixins';

@mixin underline($color: var(--color-text-5)) {
  position: relative;

  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: $color;
  }
}

.root {
  overflow: auto;
  contain: strict;

  .table {
    position: relative;
    table-layout: fixed;
    text-align: left;
    border-collapse: collapse;
    border-spacing: 0;
    background-color: var(--color-global-bgcard);
    min-width: 100%;

    th,
    td {
      position: relative;
    }

    thead {
      background-color: var(--color-global-bgcard);

      &.sticky {
        position: sticky;
        top: 0;
        z-index: 1;
      }

      tr {
        @include underline();

        display: grid;
        grid-template-columns: var(--row-template-columns);
        background-color: var(--color-text-5);

        th {
          @include fontCaptionBold;

          padding: var(--spacing-10) var(--spacing-8);
          color: var(--color-text-60);

          &:hover {
            .resizer {
              opacity: 1;
            }
          }

          &.isSortable {
            cursor: pointer;
            transition: color 0.15s;

            &:hover {
              color: var(--color-text-90);
            }
          }

          .thContent {
            display: flex;
            gap: var(--spacing-8);

            > span {
              white-space: nowrap;
              overflow: hidden;
              text-overflow: ellipsis;
            }

            &Icon {
              flex: 0 0 16px;
            }
          }

          .resizer {
            position: absolute;
            right: 0;
            top: 0;
            height: 100%;
            width: var(--spacing-16);
            cursor: col-resize;
            user-select: none;
            touch-action: none;
            opacity: 0;
            transition: opacity 0.15s, background-color 0.15s;

            &::after {
              content: '';
              position: absolute;
              top: 0;
              right: 0;
              width: var(--spacing-4);
              height: 100%;
              background-color: var(--color-text-20);
            }

            &IsResizing {
              opacity: 1;

              &::after {
                background: var(--color-primary-50);
              }
            }
          }
        }
      }
    }

    tbody {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      transform: translateY(var(--tbody-transform));

      tr {
        display: grid;
        grid-template-columns: var(--row-template-columns);

        td {
          @include fontBody3;

          color: var(--color-text-90);
          background-color: var(--color-global-bgcard);

          &:not(:has(input)) {
            padding: var(--spacing-6) var(--spacing-8);
          }

          &.resetPadding {
            padding: 0;
          }

          > .tdContent {
            width: 100%;
            height: 100%;
            display: -webkit-box;
            -webkit-line-clamp: var(--cell-vert-clamp);
            -webkit-box-orient: vertical;
            overflow: hidden;
            display: flex;
            align-items: var(--vertical-align);
          }
        }

        &:not(:last-child) {
          &.underline {
            @include underline();
          }
        }

        &.highlight {
          background-color: var(--color-global-bgmain);

          td {
            background-color: inherit;
          }
        }

        &:hover {
          background-color: var(--color-primary-5);

          td {
            background-color: inherit;
          }
        }

        &.active {
          background-color: var(--color-primary-10);

          td {
            background-color: inherit;
          }
        }
      }
    }
  }
}
