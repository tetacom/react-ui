@use '../../style/mixins';
@use './mixins.module' as tableMixins;

.root {
  display: grid;
  grid-template-rows: auto 1fr;

  .filters {
    padding: var(--spacing-12);
    display: grid;
    align-items: center;
    grid-template-columns: 1fr auto;
    gap: var(--spacing-12);
    background: var(--color-global-bgcard);

    &Hidden {
      height: 0;
      padding: 0;
      overflow: hidden;
    }
  }

  .tableWrapper {
    overflow: auto;
    contain: strict;

    .table {
      position: relative;
      table-layout: fixed;
      text-align: left;
      border-collapse: collapse;
      border-spacing: 0;
      background-color: var(--color-global-bgcard);
      min-width: 100%;

      th,
      td {
        position: relative;
      }

      thead {
        background-color: var(--color-global-bgcard);

        &.sticky {
          position: sticky;
          top: 0;
          z-index: 1;
        }

        tr {
          @include tableMixins.underline();

          display: grid;
          grid-template-columns: var(--row-template-columns);
          background-color: var(--color-text-5);

          th {
            @include mixins.fontCaptionBold();

            padding: var(--spacing-10) var(--spacing-8);
            color: var(--color-text-60);

            &:hover {
              .resizer {
                opacity: 1;
              }
            }

            &.isSortable {
              cursor: pointer;
              transition: color 0.15s;

              &:hover {
                color: var(--color-text-90);
              }
            }

            &.lockedHeadLeft {
              @include tableMixins.lockedCell();
              @include tableMixins.lockedHead(right);

              &Last {
                @include tableMixins.stickyLeft();
              }
            }

            &.lockedHeadRight {
              @include tableMixins.lockedCell();
              @include tableMixins.lockedHead(left);

              &First {
                @include tableMixins.stickyRight();
              }
            }

            .thContent {
              display: flex;
              gap: var(--spacing-8);

              > * {
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
              }

              &Icon {
                flex: 0 0 16px;
              }
            }

            .resizer {
              position: absolute;
              right: 0;
              top: 0;
              height: 100%;
              width: var(--spacing-16);
              cursor: col-resize;
              user-select: none;
              touch-action: none;
              opacity: 0;
              transition:
                opacity 0.15s,
                background-color 0.15s;

              &::after {
                content: '';
                position: absolute;
                top: 0;
                right: 0;
                width: var(--spacing-4);
                height: 100%;
                background-color: var(--color-text-20);
              }

              &IsResizing {
                opacity: 1;

                &::after {
                  background-color: var(--color-primary-50);
                }
              }
            }
          }
        }
      }

      tbody {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        transform: translateY(var(--tbody-transform));

        tr {
          display: grid;
          grid-template-columns: var(--row-template-columns);

          td {
            @include mixins.fontBody3();

            color: var(--color-text-90);
            background-color: var(--color-global-bgcard);

            &:not(:has(input, textarea)) {
              padding: var(--spacing-6) var(--spacing-8);
            }

            &.resetPadding {
              padding: 0;
            }

            &.lockedBodyLeft {
              @include tableMixins.lockedCell();

              &Last {
                @include tableMixins.stickyLeft();
              }
            }

            &.lockedBodyRight {
              @include tableMixins.lockedCell();

              &First {
                @include tableMixins.stickyRight();
              }
            }

            .tdContent {
              width: 100%;
              height: 100%;
              display: -webkit-box;
              -webkit-line-clamp: var(--cell-vert-clamp);
              -webkit-box-orient: vertical;
              overflow: hidden;
              display: flex;
              align-items: var(--vertical-align);
            }
          }

          &:not(:last-child) {
            &.underline {
              @include tableMixins.underline();

              td {
                &.lockedBodyLeft {
                  @include tableMixins.lockedCellUnderline();
                }

                &.lockedBodyRight {
                  @include tableMixins.lockedCellUnderline();
                }
              }
            }
          }

          &.highlight {
            background-color: var(--color-global-bgmain);

            td {
              background-color: inherit;
            }
          }

          &:hover {
            background-color: var(--color-primary-5);

            td {
              background-color: inherit;
            }
          }

          &.active {
            background-color: var(--color-primary-10);

            td {
              background-color: inherit;
            }
          }
        }
      }
    }
  }
}
